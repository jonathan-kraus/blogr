// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url="prisma+postgres://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqd3RfaWQiOjEsInNlY3VyZV9rZXkiOiJza193Y2ZRbV9sY2JLN05MNmZWb0RpbjgiLCJhcGlfa2V5IjoiMDFLMkFONTg0S1NDQkRQUDE2SzUwRURUNVciLCJ0ZW5hbnRfaWQiOiJmNDk1MzdlODNkY2UyMDIzNjA1ZWJhOTNmNzczZTU3M2QxMjc4ZThmMDBlYmRiZDlmMDY3ZTYxMTRiZTI1MzY4IiwiaW50ZXJuYWxfc2VjcmV0IjoiMzMyOTFkMWMtMWNkOS00MjI1LWE2MTMtOGU2Yjk3N2EyNDFkIn0.Nhc_pbCfuQ09-CEk41ByFcmgAgZOaXk0hDaqDj2ye6w"
// not working url  = env("DATABASE_URL")
}

model Post {
  id        String     @default(cuid()) @id
  title     String
  content   String?
  createdj  String?
  published Boolean @default(true)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model User {
  id            String       @default(cuid()) @id
  name          String?
  email         String?   @unique
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  posts         Post[]
  @@map(name: "users")
}